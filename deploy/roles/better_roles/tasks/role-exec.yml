---

- name: Create tempfile for role execution
  ansible.builtin.tempfile:
  changed_when: false
  register: loop_tasks
  become: false
  delegate_to: localhost

- name: Create task file
  ansible.builtin.copy:
    dest: "{{ loop_tasks.path }}"
    content: |
      - name: Block for "apply"
        block:
        - meta: noop
      {% if loop_apply | bool %}    vars:
            apply: &apply {{ loop_apply | to_json }}{{ newline }}{% endif %}
        - name: loop on role {{ loop_this_item.role | default(loop_role) }}
          # include_role ends up with undefined vars in handlers
          ansible.builtin.import_role:
            name: {{ loop_this_item.role | default(loop_role) }}
      {% if loop_defaults_from | bool %}      defaults_from: {{ loop_defaults_from ~ newline }}{% endif %}
      {% if loop_handlers_from | bool %}      handlers_from: {{ loop_handlers_from ~ newline }}{% endif %}
      {% if loop_tasks_from | bool %}      tasks_from: {{ loop_tasks_from ~ newline }}{% endif %}
      {% if loop_vars_from | bool %}      vars_from: {{ loop_vars_from ~ newline }}{% endif %}
      {% if loop_allow_duplicates | bool %}      allow_duplicates: {{ loop_allow_duplicates ~ newline }}{% endif %}
        vars:
      {% for myvar in loop_vars.keys() %}
            {{ loop_prefix ~ myvar ~ ': "{{ loop_vars.' ~ myvar ~ ' }}"' }}
      {% endfor %}
      {% for myvar in loop_this_item.keys() %}
      {% if myvar != 'role' %}
            {{ loop_prefix ~ myvar ~ ': "{{ loop_this_item.' ~ myvar ~ ' }}"' }}
      {% endif %}
      {% endfor %}
      {% if loop_apply | bool %}  <<: *apply{{ newline }}{% endif %}
  changed_when: false
  become: false
  delegate_to: localhost
  vars:
    newline: "\n"

- name: Include role task
  ansible.builtin.include_tasks: "{{ loop_tasks.path }}"

- name: Remove tempfile
  ansible.builtin.file:
    path: "{{ loop_tasks.path }}"
    state: absent
  changed_when: false
  become: false
  delegate_to: localhost
